// large_form.h
#pragma once

#include <Windows.h>
#include <stack>
#include <cmath>
#include <algorithm>
#include <string>

namespace crl2stud {

    using namespace System;
    using namespace System::ComponentModel;
    using namespace System::Collections;
    using namespace System::Windows::Forms;
    using namespace System::Data;
    using namespace System::Drawing;

    public ref class large_form : public System::Windows::Forms::Form
    {
    public:
        large_form(void)
        {
            InitializeComponent();
            InitializeTrigMenu();
            this->trigMenu->Visible = false;
        }

    protected:
        ~large_form()
        {
            if (components)
            {
                delete components;
            }
        }

    private:
        System::Windows::Forms::TextBox^ expressionBox;
        System::Windows::Forms::Button^ btnSin;
        System::Windows::Forms::Button^ btnCos;
        System::Windows::Forms::Button^ btnTan;
        System::Windows::Forms::Button^ btnCot;
        System::Windows::Forms::Button^ btnSqrt;
        System::Windows::Forms::Button^ btnPower;
        System::Windows::Forms::Button^ btnOpenParen;
        System::Windows::Forms::Button^ btnCloseParen;
        System::Windows::Forms::Button^ btnBack;
        System::Windows::Forms::Button^ btnClear;
        System::Windows::Forms::Button^ btnEquals;
        System::Windows::Forms::Button^ btnTrig;
        System::Windows::Forms::Panel^ trigMenu;
        System::Windows::Forms::Button^ btnMainForm;
        System::Windows::Forms::Button^ btn0;
        System::Windows::Forms::Button^ btn1;
        System::Windows::Forms::Button^ btn2;
        System::Windows::Forms::Button^ btn3;
        System::Windows::Forms::Button^ btn4;
        System::Windows::Forms::Button^ btn5;
        System::Windows::Forms::Button^ btn6;
        System::Windows::Forms::Button^ btn7;
        System::Windows::Forms::Button^ btn8;
        System::Windows::Forms::Button^ btn9;
        System::Windows::Forms::Button^ btnPlus;
        System::Windows::Forms::Button^ btnMinus;
        System::Windows::Forms::Button^ btnMultiply;
        System::Windows::Forms::Button^ btnDivide;
        System::Windows::Forms::Button^ btnDot;
        System::Windows::Forms::Button^ btnSign;

        System::ComponentModel::Container^ components;

#pragma region Windows Form Designer generated code
        void InitializeComponent(void)
        {
            this->expressionBox = (gcnew System::Windows::Forms::TextBox());
            this->btnSin = (gcnew System::Windows::Forms::Button());
            this->btnCos = (gcnew System::Windows::Forms::Button());
            this->btnTan = (gcnew System::Windows::Forms::Button());
            this->btnCot = (gcnew System::Windows::Forms::Button());
            this->btnSqrt = (gcnew System::Windows::Forms::Button());
            this->btnPower = (gcnew System::Windows::Forms::Button());
            this->btnOpenParen = (gcnew System::Windows::Forms::Button());
            this->btnCloseParen = (gcnew System::Windows::Forms::Button());
            this->btnBack = (gcnew System::Windows::Forms::Button());
            this->btnClear = (gcnew System::Windows::Forms::Button());
            this->btnEquals = (gcnew System::Windows::Forms::Button());
            this->btnTrig = (gcnew System::Windows::Forms::Button());
            this->trigMenu = (gcnew System::Windows::Forms::Panel());
            this->btnMainForm = (gcnew System::Windows::Forms::Button());
            this->btn0 = (gcnew System::Windows::Forms::Button());
            this->btn1 = (gcnew System::Windows::Forms::Button());
            this->btn2 = (gcnew System::Windows::Forms::Button());
            this->btn3 = (gcnew System::Windows::Forms::Button());
            this->btn4 = (gcnew System::Windows::Forms::Button());
            this->btn5 = (gcnew System::Windows::Forms::Button());
            this->btn6 = (gcnew System::Windows::Forms::Button());
            this->btn7 = (gcnew System::Windows::Forms::Button());
            this->btn8 = (gcnew System::Windows::Forms::Button());
            this->btn9 = (gcnew System::Windows::Forms::Button());
            this->btnPlus = (gcnew System::Windows::Forms::Button());
            this->btnMinus = (gcnew System::Windows::Forms::Button());
            this->btnMultiply = (gcnew System::Windows::Forms::Button());
            this->btnDivide = (gcnew System::Windows::Forms::Button());
            this->btnDot = (gcnew System::Windows::Forms::Button());
            this->btnSign = (gcnew System::Windows::Forms::Button());
            this->trigMenu->SuspendLayout();
            this->SuspendLayout();
            // 
            // expressionBox
            // 
            this->expressionBox->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 18, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point, 
                static_cast<System::Byte>(204)));
            this->expressionBox->Location = System::Drawing::Point(12, 12);
            this->expressionBox->Multiline = true;
            this->expressionBox->Name = L"expressionBox";
            this->expressionBox->Size = System::Drawing::Size(460, 40);
            this->expressionBox->TabIndex = 0;
            this->expressionBox->TextAlign = System::Windows::Forms::HorizontalAlignment::Right;
            // 
            // btnSin
            // 
            this->btnSin->Location = System::Drawing::Point(12, 70);
            this->btnSin->Name = L"btnSin";
            this->btnSin->Size = System::Drawing::Size(75, 40);
            this->btnSin->TabIndex = 1;
            this->btnSin->Text = L"sin";
            this->btnSin->UseVisualStyleBackColor = true;
            this->btnSin->Click += gcnew System::EventHandler(this, &large_form::btnSin_Click);
            // 
            // btnCos
            // 
            this->btnCos->Location = System::Drawing::Point(93, 70);
            this->btnCos->Name = L"btnCos";
            this->btnCos->Size = System::Drawing::Size(75, 40);
            this->btnCos->TabIndex = 2;
            this->btnCos->Text = L"cos";
            this->btnCos->UseVisualStyleBackColor = true;
            this->btnCos->Click += gcnew System::EventHandler(this, &large_form::btnCos_Click);
            // 
            // btnTan
            // 
            this->btnTan->Location = System::Drawing::Point(174, 70);
            this->btnTan->Name = L"btnTan";
            this->btnTan->Size = System::Drawing::Size(75, 40);
            this->btnTan->TabIndex = 3;
            this->btnTan->Text = L"tan";
            this->btnTan->UseVisualStyleBackColor = true;
            this->btnTan->Click += gcnew System::EventHandler(this, &large_form::btnTan_Click);
            // 
            // btnCot
            // 
            this->btnCot->Location = System::Drawing::Point(255, 70);
            this->btnCot->Name = L"btnCot";
            this->btnCot->Size = System::Drawing::Size(75, 40);
            this->btnCot->TabIndex = 4;
            this->btnCot->Text = L"cot";
            this->btnCot->UseVisualStyleBackColor = true;
            this->btnCot->Click += gcnew System::EventHandler(this, &large_form::btnCot_Click);
            // 
            // btnSqrt
            // 
            this->btnSqrt->Location = System::Drawing::Point(336, 70);
            this->btnSqrt->Name = L"btnSqrt";
            this->btnSqrt->Size = System::Drawing::Size(75, 40);
            this->btnSqrt->TabIndex = 5;
            this->btnSqrt->Text = L"√";
            this->btnSqrt->UseVisualStyleBackColor = true;
            this->btnSqrt->Click += gcnew System::EventHandler(this, &large_form::btnSqrt_Click);
            // 
            // btnPower
            // 
            this->btnPower->Location = System::Drawing::Point(417, 70);
            this->btnPower->Name = L"btnPower";
            this->btnPower->Size = System::Drawing::Size(75, 40);
            this->btnPower->TabIndex = 6;
            this->btnPower->Text = L"^";
            this->btnPower->UseVisualStyleBackColor = true;
            this->btnPower->Click += gcnew System::EventHandler(this, &large_form::btnPower_Click);
            // 
            // btnOpenParen
            // 
            this->btnOpenParen->Location = System::Drawing::Point(12, 116);
            this->btnOpenParen->Name = L"btnOpenParen";
            this->btnOpenParen->Size = System::Drawing::Size(75, 40);
            this->btnOpenParen->TabIndex = 7;
            this->btnOpenParen->Text = L"(";
            this->btnOpenParen->UseVisualStyleBackColor = true;
            this->btnOpenParen->Click += gcnew System::EventHandler(this, &large_form::btnOpenParen_Click);
            // 
            // btnCloseParen
            // 
            this->btnCloseParen->Location = System::Drawing::Point(93, 116);
            this->btnCloseParen->Name = L"btnCloseParen";
            this->btnCloseParen->Size = System::Drawing::Size(75, 40);
            this->btnCloseParen->TabIndex = 8;
            this->btnCloseParen->Text = L")";
            this->btnCloseParen->UseVisualStyleBackColor = true;
            this->btnCloseParen->Click += gcnew System::EventHandler(this, &large_form::btnCloseParen_Click);
            // 
            // btnBack
            // 
            this->btnBack->Location = System::Drawing::Point(174, 116);
            this->btnBack->Name = L"btnBack";
            this->btnBack->Size = System::Drawing::Size(75, 40);
            this->btnBack->TabIndex = 9;
            this->btnBack->Text = L"←";
            this->btnBack->UseVisualStyleBackColor = true;
            this->btnBack->Click += gcnew System::EventHandler(this, &large_form::btnBack_Click);
            // 
            // btnClear
            // 
            this->btnClear->Location = System::Drawing::Point(255, 116);
            this->btnClear->Name = L"btnClear";
            this->btnClear->Size = System::Drawing::Size(75, 40);
            this->btnClear->TabIndex = 10;
            this->btnClear->Text = L"C";
            this->btnClear->UseVisualStyleBackColor = true;
            this->btnClear->Click += gcnew System::EventHandler(this, &large_form::btnClear_Click);
            // 
            // btnEquals
            // 
            this->btnEquals->Location = System::Drawing::Point(336, 116);
            this->btnEquals->Name = L"btnEquals";
            this->btnEquals->Size = System::Drawing::Size(156, 40);
            this->btnEquals->TabIndex = 11;
            this->btnEquals->Text = L"=";
            this->btnEquals->UseVisualStyleBackColor = true;
            this->btnEquals->Click += gcnew System::EventHandler(this, &large_form::btnEquals_Click);
            // 
            // btnTrig
            // 
            this->btnTrig->Location = System::Drawing::Point(417, 116);
            this->btnTrig->Name = L"btnTrig";
            this->btnTrig->Size = System::Drawing::Size(75, 40);
            this->btnTrig->TabIndex = 12;
            this->btnTrig->Text = L"Trig";
            this->btnTrig->UseVisualStyleBackColor = true;
            this->btnTrig->Click += gcnew System::EventHandler(this, &large_form::btnTrig_Click);
            // 
            // trigMenu
            // 
            this->trigMenu->Controls->Add(this->btnSin);
            this->trigMenu->Controls->Add(this->btnCos);
            this->trigMenu->Controls->Add(this->btnTan);
            this->trigMenu->Controls->Add(this->btnCot);
            this->trigMenu->Location = System::Drawing::Point(12, 70);
            this->trigMenu->Name = L"trigMenu";
            this->trigMenu->Size = System::Drawing::Size(318, 40);
            this->trigMenu->TabIndex = 13;
            // 
            // btnMainForm
            // 
            this->btnMainForm->Location = System::Drawing::Point(12, 380);
            this->btnMainForm->Name = L"btnMainForm";
            this->btnMainForm->Size = System::Drawing::Size(100, 30);
            this->btnMainForm->TabIndex = 14;
            this->btnMainForm->Text = L"Basic Calc";
            this->btnMainForm->UseVisualStyleBackColor = true;
            this->btnMainForm->Click += gcnew System::EventHandler(this, &large_form::btnMainForm_Click);
            // 
            // btn0
            // 
            this->btn0->Location = System::Drawing::Point(93, 324);
            this->btn0->Name = L"btn0";
            this->btn0->Size = System::Drawing::Size(75, 40);
            this->btn0->TabIndex = 15;
            this->btn0->Text = L"0";
            this->btn0->UseVisualStyleBackColor = true;
            this->btn0->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn1
            // 
            this->btn1->Location = System::Drawing::Point(12, 278);
            this->btn1->Name = L"btn1";
            this->btn1->Size = System::Drawing::Size(75, 40);
            this->btn1->TabIndex = 16;
            this->btn1->Text = L"1";
            this->btn1->UseVisualStyleBackColor = true;
            this->btn1->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn2
            // 
            this->btn2->Location = System::Drawing::Point(93, 278);
            this->btn2->Name = L"btn2";
            this->btn2->Size = System::Drawing::Size(75, 40);
            this->btn2->TabIndex = 17;
            this->btn2->Text = L"2";
            this->btn2->UseVisualStyleBackColor = true;
            this->btn2->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn3
            // 
            this->btn3->Location = System::Drawing::Point(174, 278);
            this->btn3->Name = L"btn3";
            this->btn3->Size = System::Drawing::Size(75, 40);
            this->btn3->TabIndex = 18;
            this->btn3->Text = L"3";
            this->btn3->UseVisualStyleBackColor = true;
            this->btn3->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn4
            // 
            this->btn4->Location = System::Drawing::Point(12, 232);
            this->btn4->Name = L"btn4";
            this->btn4->Size = System::Drawing::Size(75, 40);
            this->btn4->TabIndex = 19;
            this->btn4->Text = L"4";
            this->btn4->UseVisualStyleBackColor = true;
            this->btn4->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn5
            // 
            this->btn5->Location = System::Drawing::Point(93, 232);
            this->btn5->Name = L"btn5";
            this->btn5->Size = System::Drawing::Size(75, 40);
            this->btn5->TabIndex = 20;
            this->btn5->Text = L"5";
            this->btn5->UseVisualStyleBackColor = true;
            this->btn5->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn6
            // 
            this->btn6->Location = System::Drawing::Point(174, 232);
            this->btn6->Name = L"btn6";
            this->btn6->Size = System::Drawing::Size(75, 40);
            this->btn6->TabIndex = 21;
            this->btn6->Text = L"6";
            this->btn6->UseVisualStyleBackColor = true;
            this->btn6->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn7
            // 
            this->btn7->Location = System::Drawing::Point(12, 186);
            this->btn7->Name = L"btn7";
            this->btn7->Size = System::Drawing::Size(75, 40);
            this->btn7->TabIndex = 22;
            this->btn7->Text = L"7";
            this->btn7->UseVisualStyleBackColor = true;
            this->btn7->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn8
            // 
            this->btn8->Location = System::Drawing::Point(93, 186);
            this->btn8->Name = L"btn8";
            this->btn8->Size = System::Drawing::Size(75, 40);
            this->btn8->TabIndex = 23;
            this->btn8->Text = L"8";
            this->btn8->UseVisualStyleBackColor = true;
            this->btn8->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btn9
            // 
            this->btn9->Location = System::Drawing::Point(174, 186);
            this->btn9->Name = L"btn9";
            this->btn9->Size = System::Drawing::Size(75, 40);
            this->btn9->TabIndex = 24;
            this->btn9->Text = L"9";
            this->btn9->UseVisualStyleBackColor = true;
            this->btn9->Click += gcnew System::EventHandler(this, &large_form::NumberButton_Click);
            // 
            // btnPlus
            // 
            this->btnPlus->Location = System::Drawing::Point(255, 186);
            this->btnPlus->Name = L"btnPlus";
            this->btnPlus->Size = System::Drawing::Size(75, 40);
            this->btnPlus->TabIndex = 25;
            this->btnPlus->Text = L"+";
            this->btnPlus->UseVisualStyleBackColor = true;
            this->btnPlus->Click += gcnew System::EventHandler(this, &large_form::OperatorButton_Click);
            // 
            // btnMinus
            // 
            this->btnMinus->Location = System::Drawing::Point(255, 232);
            this->btnMinus->Name = L"btnMinus";
            this->btnMinus->Size = System::Drawing::Size(75, 40);
            this->btnMinus->TabIndex = 26;
            this->btnMinus->Text = L"-";
            this->btnMinus->UseVisualStyleBackColor = true;
            this->btnMinus->Click += gcnew System::EventHandler(this, &large_form::OperatorButton_Click);
            // 
            // btnMultiply
            // 
            this->btnMultiply->Location = System::Drawing::Point(255, 278);
            this->btnMultiply->Name = L"btnMultiply";
            this->btnMultiply->Size = System::Drawing::Size(75, 40);
            this->btnMultiply->TabIndex = 27;
            this->btnMultiply->Text = L"*";
            this->btnMultiply->UseVisualStyleBackColor = true;
            this->btnMultiply->Click += gcnew System::EventHandler(this, &large_form::OperatorButton_Click);
            // 
            // btnDivide
            // 
            this->btnDivide->Location = System::Drawing::Point(255, 324);
            this->btnDivide->Name = L"btnDivide";
            this->btnDivide->Size = System::Drawing::Size(75, 40);
            this->btnDivide->TabIndex = 28;
            this->btnDivide->Text = L"/";
            this->btnDivide->UseVisualStyleBackColor = true;
            this->btnDivide->Click += gcnew System::EventHandler(this, &large_form::OperatorButton_Click);
            // 
            // btnDot
            // 
            this->btnDot->Location = System::Drawing::Point(174, 324);
            this->btnDot->Name = L"btnDot";
            this->btnDot->Size = System::Drawing::Size(75, 40);
            this->btnDot->TabIndex = 29;
            this->btnDot->Text = L".";
            this->btnDot->UseVisualStyleBackColor = true;
            this->btnDot->Click += gcnew System::EventHandler(this, &large_form::btnDot_Click);
            // 
            // btnSign
            // 
            this->btnSign->Location = System::Drawing::Point(12, 324);
            this->btnSign->Name = L"btnSign";
            this->btnSign->Size = System::Drawing::Size(75, 40);
            this->btnSign->TabIndex = 30;
            this->btnSign->Text = L"+/-";
            this->btnSign->UseVisualStyleBackColor = true;
            this->btnSign->Click += gcnew System::EventHandler(this, &large_form::btnSign_Click);
            // 
            // large_form
            // 
            this->AutoScaleDimensions = System::Drawing::SizeF(8, 16);
            this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
            this->ClientSize = System::Drawing::Size(484, 422);
            this->Controls->Add(this->btnSign);
            this->Controls->Add(this->btnDot);
            this->Controls->Add(this->btnDivide);
            this->Controls->Add(this->btnMultiply);
            this->Controls->Add(this->btnMinus);
            this->Controls->Add(this->btnPlus);
            this->Controls->Add(this->btn9);
            this->Controls->Add(this->btn8);
            this->Controls->Add(this->btn7);
            this->Controls->Add(this->btn6);
            this->Controls->Add(this->btn5);
            this->Controls->Add(this->btn4);
            this->Controls->Add(this->btn3);
            this->Controls->Add(this->btn2);
            this->Controls->Add(this->btn1);
            this->Controls->Add(this->btn0);
            this->Controls->Add(this->btnMainForm);
            this->Controls->Add(this->trigMenu);
            this->Controls->Add(this->btnTrig);
            this->Controls->Add(this->btnEquals);
            this->Controls->Add(this->btnClear);
            this->Controls->Add(this->btnBack);
            this->Controls->Add(this->btnCloseParen);
            this->Controls->Add(this->btnOpenParen);
            this->Controls->Add(this->btnPower);
            this->Controls->Add(this->btnSqrt);
            this->Controls->Add(this->btnCot);
            this->Controls->Add(this->btnTan);
            this->Controls->Add(this->btnCos);
            this->Controls->Add(this->btnSin);
            this->Controls->Add(this->expressionBox);
            this->Name = L"large_form";
            this->Text = L"Advanced Calculator";
            this->trigMenu->ResumeLayout(false);
            this->ResumeLayout(false);
            this->PerformLayout();

        }
#pragma endregion

    private:
        void InitializeTrigMenu()
        {
            // Trig menu is already initialized in InitializeComponent
        }

        double EvaluateExpression(System::String^ expression)
        {
            try
            {
                // Convert System::String to std::string
                std::string expr = msclr::interop::marshal_as<std::string>(expression);

                // Remove all whitespace
                expr.erase(std::remove_if(expr.begin(), expr.end(), ::isspace), expr.end());

                std::stack<double> values;
                std::stack<char> ops;

                for (size_t i = 0; i < expr.length(); i++) {
                    if (expr[i] == ' ')
                        continue;

                    if (expr[i] == '(') {
                        ops.push(expr[i]);
                    }
                    else if (isdigit(expr[i]) || expr[i] == '.') {
                        double val = 0;
                        bool decimal = false;
                        double decimalPlace = 0.1;
                        bool negative = false;

                        // Check for negative numbers
                        if (i > 0 && expr[i - 1] == '-') {
                            if (i == 1 || expr[i - 2] == '(' || 
                                expr[i - 2] == '+' || expr[i - 2] == '-' || 
                                expr[i - 2] == '*' || expr[i - 2] == '/') {
                                negative = true;
                                ops.pop(); // Remove the '-' from ops stack
                            }
                        }

                        while (i < expr.length() && (isdigit(expr[i]) || expr[i] == '.')) {
                            if (expr[i] == '.') {
                                decimal = true;
                            }
                            else {
                                if (!decimal) {
                                    val = val * 10 + (expr[i] - '0');
                                }
                                else {
                                    val = val + (expr[i] - '0') * decimalPlace;
                                    decimalPlace /= 10;
                                }
                            }
                            i++;
                        }

                        if (negative) {
                            val = -val;
                        }

                        values.push(val);
                        i--;
                    }
                    else if (expr[i] == ')') {
                        while (!ops.empty() && ops.top() != '(') {
                            double val2 = values.top();
                            values.pop();

                            double val1 = values.top();
                            values.pop();

                            char op = ops.top();
                            ops.pop();

                            values.push(ApplyOp(val1, val2, op));
                        }

                        if (!ops.empty())
                            ops.pop(); // Remove '(' from stack
                    }
                    else {
                        while (!ops.empty() && Precedence(ops.top()) >= Precedence(expr[i])) {
                            double val2 = values.top();
                            values.pop();

                            double val1 = values.top();
                            values.pop();

                            char op = ops.top();
                            ops.pop();

                            values.push(ApplyOp(val1, val2, op));
                        }

                        ops.push(expr[i]);
                    }
                }

                while (!ops.empty()) {
                    double val2 = values.top();
                    values.pop();

                    double val1 = values.top();
                    values.pop();

                    char op = ops.top();
                    ops.pop();

                    values.push(ApplyOp(val1, val2, op));
                }

                return values.empty() ? 0 : values.top();
            }
            catch (...)
            {
                throw gcnew System::Exception("Error evaluating expression");
            }
        }

        int Precedence(char op)
        {
            if (op == '+' || op == '-')
                return 1;
            if (op == '*' || op == '/')
                return 2;
            return 0;
        }

        double ApplyOp(double a, double b, char op)
        {
            switch (op) {
            case '+': return a + b;
            case '-': return a - b;
            case '*': return a * b;
            case '/': 
                if (b == 0) throw gcnew System::DivideByZeroException();
                return a / b;
            }
            return 0;
        }

    private:
        System::Void btnMainForm_Click(System::Object^ sender, System::EventArgs^ e)
        {
            this->Close();
        }

        System::Void NumberButton_Click(System::Object^ sender, System::EventArgs^ e)
        {
            Button^ button = safe_cast<Button^>(sender);
            expressionBox->Text += button->Text;
        }

        System::Void OperatorButton_Click(System::Object^ sender, System::EventArgs^ e)
        {
            Button^ button = safe_cast<Button^>(sender);
            expressionBox->Text += button->Text;
        }

        System::Void btnOpenParen_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "(";
        }

        System::Void btnCloseParen_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += ")";
        }

        System::Void btnBack_Click(System::Object^ sender, System::EventArgs^ e)
        {
            if (expressionBox->Text->Length > 0)
            {
                expressionBox->Text = expressionBox->Text->Substring(0, expressionBox->Text->Length - 1);
            }
        }

        System::Void btnClear_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Clear();
        }

        System::Void btnEquals_Click(System::Object^ sender, System::EventArgs^ e)
        {
            try
            {
                double result = EvaluateExpression(expressionBox->Text);
                expressionBox->Text = result.ToString();
            }
            catch (Exception^ ex)
            {
                expressionBox->Text = "Error: " + ex->Message;
            }
        }

        System::Void btnTrig_Click(System::Object^ sender, System::EventArgs^ e)
        {
            trigMenu->Visible = !trigMenu->Visible;
        }

        System::Void btnSin_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "sin(";
        }

        System::Void btnCos_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "cos(";
        }

        System::Void btnTan_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "tan(";
        }

        System::Void btnCot_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "cot(";
        }

        System::Void btnSqrt_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "sqrt(";
        }

        System::Void btnPower_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "^";
        }

        System::Void btnDot_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += ".";
        }

        System::Void btnSign_Click(System::Object^ sender, System::EventArgs^ e)
        {
            expressionBox->Text += "-";
        }
    };
}